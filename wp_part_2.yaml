AWSTemplateFormatVersion: 2010-09-09 
Description: This template creates WordPress Instance, RDS database,ALB and Route 53.

### Define Parameters ###
Parameters:
  # First stack name
  NetworkStackName:
    Description: "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack."
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    Default: "vpc"  

  # RDS DataBase Parameters
  DbUserName:  
    NoEcho: 'true'
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    Description: must begin with a letter and contain only alphanumeric characters.
  DbUserPassword:   
    NoEcho: 'true'
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: must contain only alphanumeric characters.  
  DbInstanceId:  
    Default: mydbinstance
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    Description: Must begin with a letter and must not end with a hyphen or contain two consecutive hyphens.
  DbInstanceClass:  
    Type: String
    Default: db.t2.micro
    AllowedValues: [db.t2.micro, db.t2.medium, db.t2.small]
    Description: must select a valid database instance type.
  DbAllocatedStorage:  
    Default: '20'
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    Description: must be between 20 and 65536 GiB. 
  StorageType: 
    Type: String
    Default: gp2 
  
  # Route 53 parameters 
  WpWebDomain:
    Description: "A reference to the Webserver Fully Qualified Domain Name domain name www.example.com"
    Type: "String" 
  WpHostedZone:
    Description: "A reference to the Hosted Zone example.com"
    Type: "String"
  WebAlbHostedZoneId: 
    Description: "A reference to the Webserver ELB (Canonical) Hosted Zone ID "
    Type: String
    Default: Z35SXDOTRQ7X7K 
    AllowedValues: 
      - Z35SXDOTRQ7X7K # us-east-1
      - Z3AADJGX6KTTL2 # us-east-2
  AppLoadbalancerSslCertArn:
    Description: Enter your SSL certificate for Application load balancer
    Type: String
    Default: ""

  ###  Tags   ###
  WordPressName: 
    Type: String
    Default: Wordpress-instance
  DbSubGrpName:
    Type: String
    Default: Dbsub-grp
  DbName: 
    Type: String
    Default: wordpressdb
  RdsDbTagName: 
    Type: String
    Default: My-rds
  TargetGrpTagName:
    Type: String
    Default: target-grp
  AlbTagName:
    Type: String
    Default: app-lb
  
  # Wordpress Web Instance parameters
  WebInstanceType:  
    Type: String   
    Default: t2.micro
    AllowedValues: [t2.micro, t2.small, t2.medium]
    Description: Please choose a valid instance type. 
  VolumeSize:  
    Type: Number
    Default: 20
    Description: Please choose a valid Number
    AllowedValues: [20, 30, 40, 50]
  SSHKeyName:
    Description: 'The name of your local machine ssh-key'
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: "bastion-key"
  SSHLocation:
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Description: must be a valid IP CIDR range of the form x.x.x.x/x.
    
### Mapping ###
Mappings: 
  RegionMap:
    us-east-1:
      HVM64: ami-04d29b6f966df1537
    us-east-2:
      HVM64: ami-09558250a3419e7d0

### Define Resources ###
Resources:
  # Webserver
  WordPressInstance: 
    Description:  WordPress Instance 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !Ref WebInstanceType
      KeyName: !Ref SSHKeyName  
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: '${NetworkStackName}-PrivateSubnet2ID'
      SecurityGroupIds: 
        - Fn::ImportValue:
            Fn::Sub: '${NetworkStackName}-WebServerSecurityGroupID'
      UserData:
        Fn::Base64: 
          !Sub |
              #!/bin/bash -e
              sudo hostnamectl set-hostname wordpress-web
              sudo amazon-linux-extras install -y php7.2
              sudo yum install -y httpd 
              sudo systemctl start httpd
              sudo systemctl enable httpd
              wget https://wordpress.org/latest.tar.gz
              tar -xzf latest.tar.gz
              sudo yum install php-gd -y
              sudo yum install mysql -y 
              sudo systemctl restart httpd
              sudo cp -r wordpress/* /var/www/html
              sudo chown -R apache:apache /var/www/html
              sudo systemctl restart httpd
      BlockDeviceMappings:
        -
          DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref VolumeSize
      Tags: 
        - Key: Name
          Value: !Ref WordPressName 

  # Database Subnet Group
  RdsDbSubGrp: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: RDS Database Subnet Group
      DBSubnetGroupName: !Ref DbSubGrpName
      SubnetIds:
      - {'Fn::ImportValue': !Sub '${NetworkStackName}-PrivateSubnet1ID'}
      - {'Fn::ImportValue': !Sub '${NetworkStackName}-PrivateSubnet2ID'}

  # RDS Database Instance
  MyRdsDb:  
    Type: AWS::RDS::DBInstance
    Properties:
      VPCSecurityGroups: 
        - Fn::ImportValue:
            Fn::Sub: '${NetworkStackName}-RDSSecurityGroupID'
      DBSubnetGroupName: !Ref RdsDbSubGrp
      AllocatedStorage: !Ref DbAllocatedStorage
      DBInstanceClass:  !Ref DbInstanceClass
      Engine: MariaDB
      EngineVersion: 10.4.8
      #StorageEncrypted: true
      DBInstanceIdentifier:  !Ref DbInstanceId
      MasterUsername: !Ref DbUserName
      MasterUserPassword: !Ref DbUserPassword
      DBName: !Ref DbName
      Port: 3306
      BackupRetentionPeriod: 0   
      PubliclyAccessible: false  
      StorageType: !Ref StorageType
      Tags: 
        - Key: Name
          Value: !Ref RdsDbTagName 

  # Target Group
  EC2TargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: 
      - MyALB
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      Port: 80
      HealthCheckPort: "traffic-port"
      Protocol: HTTP
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      HealthCheckEnabled: true
      TargetType: instance
      Targets:
      - Id:
          Ref: WordPressInstance
      Matcher:
        HttpCode: '200'
      Name: !Ref TargetGrpTagName
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      VpcId:
        Fn::ImportValue:
          Fn::Sub: '${NetworkStackName}-MyVPCID'
      Tags:
      - Key: Name
        Value: !Ref TargetGrpTagName

  # Listener Rules
  ListenerRule1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      - CertificateArn:
          Ref: AppLoadbalancerSslCertArn
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref MyALB
      Port: 443
      Protocol: HTTPS

  ListenerRule2: 
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - MyALB
      - EC2TargetGroup
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: HTTP

  # Application Load Balancer    
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing # or internal
      Subnets:
      - {'Fn::ImportValue': !Sub '${NetworkStackName}-PubicSubnet1ID'}
      - {'Fn::ImportValue': !Sub '${NetworkStackName}-PubicSubnet2ID'}            
      SecurityGroups:
        - Fn::ImportValue:
            Fn::Sub: '${NetworkStackName}-ELBSecurityGroupID'      
      Tags:
      - Key: Name
        Value: ! Ref AlbTagName

  # Route 53
  Route53:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: !Sub "${WpHostedZone}."
      Comment: "Zone apex alias targeted to myELB LoadBalancer."
      RecordSets:
      - Name: !Sub "${WpWebDomain}."
        Type: 'A'
        AliasTarget:
          HostedZoneId: !Ref "WebAlbHostedZoneId"
          DNSName: !GetAtt MyALB.DNSName 

 ### Outputs ###
Outputs:
  WordpressWebInstance:
    Description: 'WordPress Instance ID'
    Value: !Ref WordPressInstance                
  RDSDataBaseName:
    Description:  'My RDS Database Name'
    Value: !Ref DbName
  RDSDataIdentifier:
    Description:  'My RDS Database Identifier'
    Value: !Ref MyRdsDb
  RDSDBSubnetGroup: 
    Description: 'RDS DB Subnet Group'
    Value: !Ref RdsDbSubGrp
  RDSEndpoint:
    Description: 'RDS databases Endpoint'
    Value: !GetAtt MyRdsDb.Endpoint.Address  
  WpWebAlbDnsName:
    Description: 'Webserver ELB DNS Name A Record'
    Value: !GetAtt MyALB.DNSName
  EC2TargetGroupName:
    Description: 'My EC2 Target Group Name'
    Value: !Ref TargetGrpTagName
  MyLoadBalancerArn:
    Description: 'Application Load Balancer Name'
    Value: !Ref MyALB